
yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2

wget https://download.docker.com/linux/centos/docker-ce.repo

yum -y install docker-ce

systemctl enable docker
systemctl start docker

systemctl stop docker

docker version

docker images

docker search centos

docker pull centos

#create container

docker run -itd --name=li centos

docker exec -it li bash  #exit

#view container

docker ps -a

docker ps

docker start container_name

docker stop container_name

docker commit liyang1 newimage

docker save mynewimage > /root/mynewimage.tar

docker load < /root/mynewimage.tar

docker stop $(docker ps -a -q) #停止所有容器

docker rm $(docker ps -a -q) #删除所有container

docker rmi $(docker images -q) #删除所有image

docker inspect container_name #查看容器信息

docker inspect container_name | grep -i ip #查看当前容器ip地地址

docker run -itd --name li3 -v /liyang:/mnt centos

docker volume create vol1

docker volume ls

docker run -itd --name li4 -v vol1:/mnt centos

docker stats --no-stream li3

docker run -itd --name li4 -v vol1:/mnt --memory=500m --cpus=1 centos #limit resoures

mkdir -p /etc/ceph /var/lib/ceph

#deploy ceph with docker

docker run -d --net=host --name=mon -v /etc/ceph:/etc/ceph -v /var/lib/ceph:/var/lib/ceph -e MON_IP=192.168.7.21 -e CEPH_PUBLIC_NETWORK=192.168.7.0/24 ceph/daemon mon

docker run -d --net=host --name=mgr -v /etc/ceph:/etc/ceph -v /var/lib/ceph:/var/lib/ceph ceph/daemon mgr

docker run -d --net=host --name=osd --privileged=true -v /etc/ceph:/etc/ceph -v /var/lib/ceph:/var/lib/ceph -v /dev/:/dev/ -v /ceph-rbd:/var/lib/ceph/osd ceph/daemon osd_directory

docker run -d --net=host --name=osd --privileged=true -v /etc/ceph:/etc/ceph -v /var/lib/ceph:/var/lib/ceph -v /dev/:/dev/ -e OSD_DEVICE=/dev/vdb -e OSD_TYPE=disk -e OSD_BLUESTORE=1 ceph/daemon osd

scp -r /etc/ceph/* c2:/etc/ceph/

scp -r /var/lib/ceph/bootstrap-* c2:/var/lib/ceph/

docker rm -f osd

ceph osd crush remove osd.1
ceph auth del osd.1
ceph osd rm osd.1
umount /dev/vdc1

docker run -d --name=del --privileged=true \
-v /dev:/dev \
-e OSD_DEVICE=/dev/vdb \
ceph/daemon zap_device

docker exec mon ceph osd pool create rbd 128
docker exec mon ceph osd pool set rbd size 2
docker exec mon ceph osd pool get rbd size
docker exec mon ceph osd pool application enable rbd rbd
docker exec mon rbd create disk1 -s 600G --image-feature layering
docker exec mon rbd map disk1

docker exec mgr ceph mgr module enable dashboard
docker exec mgr ceph dashboard create-self-signed-cert
docker exec mgr ceph dashboard set-login-credentials admin admin
docker exec mgr ceph mgr services

docker exec mon ceph osd pool get cephfs_data pg_num
docker exec mon ceph osd pool set cephfs_data pg_num 128
docker exec mon ceph osd pool set cephfs_data pgp_num 90

ceph osd crush rule dump

ceph osd getcrushmap -o map.bin
crushtool -d map.bin -o map.txt

crushtool -c map.txt -o map.bin.new
ceph osd setcrushmap -i map.bin.new

#cephfs


CEPHFS_CREATE: Whether to create the ceph filesystem (0 = no / 1 = yes), if it doesn't exist. Defaults to 0 (no)

CEPHFS_NAME: The name of the new ceph filesystem and the basis on which the later variables are created. Defaults to cephfs

CEPHFS_DATA_POOL: The name of the data pool for the ceph filesystem. If it does not exist, it will be created. Defaults to ${CEPHFS_NAME}_data

CEPHFS_DATA_POOL_PG: The number of placement groups for the data pool. Defaults to 8

CEPHFS_METADATA_POOL: The name of the metadata pool for the ceph filesystem. If it does not exist, it will be created. Defaults to ${CEPHFS_NAME}_metadata

CEPHFS_METADATA_POOL_PG: The number of placement groups for the metadata pool. Defaults to 8

docker run -d --net=host --name=mds \
-v /var/lib/ceph/:/var/lib/ceph/ \
-v /etc/ceph:/etc/ceph \
-e CEPHFS_CREATE=1 \
ceph/daemon mds

docker run -d --net=host --name=mds \
-v /var/lib/ceph/:/var/lib/ceph/ \
-v /etc/ceph:/etc/ceph \
ceph/daemon mds

ceph-authtool -p /etc/ceph/ceph.client.admin.keyring > admin.key

mount -t ceph ceph2:6789:/ /cephfs -o name=admin,secretfile=admin.key

echo "ceph2:6789:/ /mnt ceph name=admin,secretfile=/root/admin.key,noatime,_netdev 0 2" >> /etc/fstab

docker pull dperson/samba
mkdir /liyang
chmod 777 /liyang
docker run -d -p 139:139 -p 445:445 --name samba -v /liyang:/share dperson/samba -u "sog;sog" -s "share;/share;yes;no;no;all;none"

docker pull fauria/vsftpd

docker run -d --net=host -v /xx:/home/vsftpd \
-e FTP_USER=sog -e FTP_PASS=sog \
--name vsftpd --restart=always fauria/vsftpd

docker pull itsthenetwork/nfs-server-alpine
mkdir /nfs
docker run -d --net=host --name nfs --privileged -v /nfs:/nfsshare -e SHARED_DIRECTORY=/nfsshare itsthenetwork/nfs-server-alpine:latest

mount -t nfs4 192.168.7.26:/ /mnt

docker pull nginx
docker run -d --name web1 -p 80:80 -v /mnt:/usr/share/nginx/html nginx

docker cp web1:/etc/nginx/nginx.conf ./
FROM nginx
COPY nginx.conf /etc/nginx/nginx.conf

#add autoindex on; to nginx.conf http section
