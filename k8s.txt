hostnamectl set-hostname k8s1.localdomain

systemctl stop firewalld.service
systemctl disable firewalld.service

sed -i "s/SELINUX=enforcing/SELINUX=disabled/g" /etc/selinux/config

cat >> /etc/hosts << EOF
192.168.6.191 k8s1 k8s1.localdomain
192.168.6.192 k8s2 k8s2.localdomain
192.168.6.193 k8s3 k8s3.localdomain
EOF

echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf

swapoff -a

tar -zxvf k8s-all-in-one.tar.gz

yum install -y k8s/docker/*.rpm

systemctl enable docker
systemctl start docker

docker load < k8s/k8s/k8s.tar.gz

docker load < k8s/trident/trident.tar.gz

docker tag 5c24210246bb  k8s.gcr.io/kube-proxy:v1.14.2         
docker tag 5eeff402b659  k8s.gcr.io/kube-apiserver:v1.14.2         
docker tag 8be94bdae139  k8s.gcr.io/kube-controller-manager:v1.14.2         
docker tag ee18f350636d  k8s.gcr.io/kube-scheduler:v1.14.2         
docker tag eb516548c180  k8s.gcr.io/coredns:1.3.1           
docker tag 2c4adeb21b4f  k8s.gcr.io/etcd:3.3.10          
docker tag da86e6ba6ca1  k8s.gcr.io/pause:3.1  
docker tag ff281650a721  quay.io/coreos/flannel:v0.11.0-amd64   
docker tag 14d1b7e152cf  netapp/trident:19.04.1   
docker tag 28c771d7cfbf  quay.io/coreos/etcd:v3.3.12   
docker tag 53f3fd8007f7  nginx:latest 

yum install -y k8s/k8s/*.rpm

systemctl enable kubelet.service
systemctl start kubelet.service

modprobe br_netfilter

cat >> /etc/sysctl.d/k8s.conf << EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl -system

reboot


kubeadm init --pod-network-cidr=10.244.0.0/16

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl apply -f k8s/k8s/kube-flannel.yml

kubeadm join --token xxxxxxxxxxx ip:6443

kubectl get nodes



